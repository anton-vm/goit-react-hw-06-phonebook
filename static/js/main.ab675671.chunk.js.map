{"version":3,"sources":["redux/action/contacts.js","redux/reducers/contacts.js","redux/store/index.js","Components/AddContactForm/AddContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js"],"names":["addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filter","contacts","createReducer","state","action","push","contact","rootReducer","filterState","globalState","configureStore","reducer","devTools","process","AddContactForm","initialState","useState","form","setForm","dispatch","useDispatch","useSelector","console","log","inputValue","e","target","value","onSubmit","preventDefault","isExist","find","el","toast","configure","error","className","type","onChange","connect","filteredArr","toLowerCase","includes","length","TransitionGroup","component","map","CSSTransition","classNames","timeout","key","onClick","Filter","onInput","App","book","in","this","enter","Component","ReactDOM","render","StrictMode","store","globalStore","document","getElementById"],"mappings":"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","file":"static/js/main.ab675671.chunk.js","sourcesContent":["import {ADD_CONTACT, DELETE_CONTACT, FILTER} from '../type/index';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {createAction} from '@reduxjs/toolkit'\r\n\r\n\r\n\r\n// export const addContact = ({name, number}) => ({\r\n//     type: ADD_CONTACT,\r\n//     payload: {id: uuidv4(), name, number}\r\n// })\r\n\r\n// export const deleteContact =(id) => ({\r\n//     type: DELETE_CONTACT,\r\n//     payload: id\r\n// })\r\n\r\n// export const filter = (value) => ({\r\n//     type: FILTER,\r\n//     payload: value\r\n// })\r\n\r\n//____with toolkits\r\n\r\nexport const addContact =createAction(\"ADD_CONTACT\", function prepare({name, number}) {return {payload: {id: uuidv4(), name, number}}})\r\nexport const deleteContact = createAction(\"DELETE_CONTACT\")\r\nexport const filter = createAction(\"FILTER\")","import { ADD_CONTACT, DELETE_CONTACT, FILTER} from '../type/index';\r\nimport storage from '../../utils/storage'\r\n\r\n// const initialState = [\r\n//     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n//     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n//     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n//     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n// ]\r\n\r\n// export const contacts = (state = initialState, action) => {\r\n//  switch (action.type) {\r\n//     case ADD_CONTACT:\r\n//         return [... state, action.payload];\r\n//     case DELETE_CONTACT:\r\n//         return state.filter(contact => contact.id !== action.payload);\r\n//      default:\r\n//          return state;\r\n//  }\r\n// }\r\n\r\n// export const filterState = (state =\"\", action ) =>{\r\n//     switch (action.type) {\r\n//         case FILTER:\r\n//         return  action.payload;\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n//____with toolkits\r\n\r\nimport {createReducer} from '@reduxjs/toolkit'\r\nimport {addContact, deleteContact, filter} from '../action/contacts'\r\n\r\nconst initialState = [\r\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n]\r\n\r\nexport const contacts = createReducer(initialState, {\r\n    [addContact]: (state, action) => {\r\n        state.push(action.payload)\r\n    },\r\n    [deleteContact]: (state, action) => \r\n        state.filter(contact => contact.id !== action.payload)\r\n    \r\n})\r\n\r\nexport const filterState = createReducer('', {\r\n    [filter]: (state, action) => (\r\n       state = action.payload\r\n    )\r\n})\r\n\r\n","import {createStore} from 'redux';\r\nimport {devToolsEnhancer} from 'redux-devtools-extension';\r\n// import rootReducer from '../reducers/index'\r\nimport {configureStore} from '@reduxjs/toolkit'\r\nimport {filterState, contacts} from '../reducers/contacts'\r\n\r\n// const globalState = createStore(rootReducer, devToolsEnhancer());\r\n\r\nconst rootReducer = {\r\n    filterState,\r\n    contacts\r\n}\r\n\r\nconst globalState = configureStore({\r\n    reducer: rootReducer,\r\n    devTools: process.env.NODE_ENV !== \"production\"\r\n})\r\n\r\nexport default globalState","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {toast} from 'react-toastify';\nimport { v4 as uuidv4 } from \"uuid\";\nimport {addContact} from '../../redux/action/contacts'\nimport {useDispatch, useSelector} from 'react-redux'\n\n\n\nconst AddContactForm = ({  name, number }) => {\n\n  const initialState = {name: \"\", number: \"\"}\n\n  const [form, setForm] = useState(initialState) \n  const dispatch = useDispatch()\n  const contacts = useSelector((state) => state.contacts)\n\n  console.log(contacts)\n\n  const inputValue = (e) => {\n    const { name, value } = e.target;\n    setForm({...form, [name]: value });\n  };\n\n  const formSubmit = (e) => {\n    e.preventDefault();\n    const isExist = contacts.find(\n      (el) => el.name === form.name\n    );\n    if (form.name === \"\" || form.number === \"\") {\n      toast.configure()\n      // alert(\"Fill the form\");\n      toast.error(\"Fill the form\")\n      return;\n    }\n    if (isExist) {\n      toast.configure()\n      toast.error(`${form.name} is already in contact`)\n      // alert(`${form.name} is already in contact`);\n      setForm(initialState)\n      return;\n    } else {\n      dispatch(addContact(form))\n      setForm(initialState)\n   \n    }\n  };\n\n  return (\n    <form onSubmit={formSubmit} className=\"block\">\n      <p className=\"label\">Name</p>\n      <input type=\"text\" onChange={inputValue} value={form.name} name=\"name\"></input>\n      <p className=\"label\">Number input</p>\n      <input\n        type=\"text\"\n        onChange={inputValue}\n        value={form.number}\n        name=\"number\"\n      />\n      <button type=\"submit\">Add phone</button>\n    </form>\n  ); \n  AddContactForm.propTypes = {\n    formSubmit: PropTypes.func.isRequired,\n    inputValue: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string,\n  };\n};\n\nexport default AddContactForm;\n","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport {CSSTransition, TransitionGroup } from 'react-transition-group'\nimport {connect, useSelector, useDispatch} from 'react-redux'\nimport {deleteContact} from '../../redux/action/contacts'\n\nconst ContactList = () => {\n\n  const contacts = useSelector((state) => state.contacts)\n  const filter = useSelector((state) => state.filterState)\n  const dispatch = useDispatch()\n \n  const filteredArr = () => {\n    return contacts.filter(el => el.name.toLowerCase().includes(filter))\n  }\n\nconsole.log(filter)\nconsole.log(contacts)\n \n\n  return (\n    <>\n      {contacts.length > 2 ? (\n        <TransitionGroup component=\"ul\" className=\"list\">\n          {filteredArr().map((el) => (\n            <CSSTransition classNames=\"listItem\" timeout={300} key={el.id}>\n            <li  className='listItem'>\n            <div className=\"listName\">{el.name}</div> <div className=\"listName\">{el.number}</div> \n              <button onClick={() => dispatch(deleteContact(el.id))} className=\"deletBtn\">X</button>\n            </li>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      ) : (\n        <TransitionGroup component=\"ul\" className=\"list\" >\n          {filteredArr().map((el) => (\n            <CSSTransition classNames=\"listItem\" timeout={300}>\n            <li key={el.id} className='listItem'>\n              <div className=\"listName\">{el.name}</div> <div className=\"listName\">{el.number}</div> \n              <button onClick={() => dispatch(deleteContact(el.id))} className=\"deletBtn\">X</button>\n            </li>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      )}\n    </>\n  );\n  ContactList.propTypes ={ \n    contacts: PropTypes.arrayOf({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n    filteredNames: PropTypes.func, \n    deleteItem: PropTypes.func,\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts\n})\n\n\n\nexport default connect(mapStateToProps) (ContactList);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {useDispatch} from 'react-redux'\nimport {filter} from '../../redux/action/contacts'\n\nconst Filter = () => {\n\n  // const [filter, setFilter] = useState('')\n  const dispatch = useDispatch()\n\n  const inputValue = (e) => {\n    // const { name, value } = e.target;\n    // setFilter({...filter, [name]: value });\n    dispatch(filter(e.target.value))\n  };\n\n  return (\n    <div className=\"block\">\n      <p className=\"label\">Find contacts by name</p>\n      <input\n        type=\"text\"\n        onInput={inputValue}\n        name=\"filter\"/>\n    </div>\n  ); \n  Filter.propTypes ={\n    inputValue:PropTypes.func.isRequired,\n\n  }\n\n};\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport AddContactForm from \"./Components/AddContactForm/AddContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\n// import storage from \"./utils/storage\";\nimport {connect} from 'react-redux'\nimport { CSSTransition } from \"react-transition-group\";\nimport {useDispatch} from 'react-redux';\nimport {takeFromStorage} from './redux/action/contacts'\n\nimport 'react-toastify/dist/ReactToastify.css'\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n\n    book: false,\n\n  };\n\n\n  // async componentDidUpdate(prevState) {\n  //   this.addToStorage(prevState);\n  // }\n\n\n\n  // takeFromStorage = () => {\n  //   const getContact = storage.get(\"contact\");\n  //   if (getContact) {\n  //     takeFromStorage(getContact)\n  //     this.setState({\n  //       contacts: getContact,\n  //     });\n  //   }\n  // };\n\n  // async componentDidMount() {\n  //   this.takeFromStorage();\n  //   this.setState({\n  //     book: true,\n  //   });\n  // }\n\n  // addToStorage = (prevState) => {\n  //   if (prevState !== this.state.contacts) {\n  //     storage.save(\"contact\", this.state.contacts);\n  //   }\n  // };\n\n\n  render() {\n\n\n    return (\n      <div className=\"overlay\">\n        <CSSTransition\n          in={this.state.book}\n          classNames=\"phonebook\"\n          timeout={{ enter: 500 }}\n        >\n          <h1 className=\"phonebook\">Phonebook</h1>\n        </CSSTransition>\n\n        <AddContactForm/>\n        <h2 className=\"phonebook\">Contact List</h2>\n        <Filter  />\n        <ContactList\n          \n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts\n})\n\n\n\nexport default connect(mapStateToProps) (App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport globalStore from './redux/store/index'\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={globalStore}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}